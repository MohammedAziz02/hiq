# Copyright (c) 2023, Oracle and/or its affiliates. All rights reserved.

version: 0.1
component: build
timeoutInSeconds: 1000
shell: bash

steps:
  - type: Command
    name: "Create a Virtual Environment for requirements-fastapi"
    command: |
      python3 -m venv fastapi_env
  - type: Command
    name: "Activate the Environment"
    command: |
      source fastapi_env/bin/activate
  - type: Command
    name: "Install cyclonedx_py module"
    command: |
      pip install cyclonedx-bom
  - type: Command
    name: "create a new requirements file that contains only the dependencies in the hiq/requirements-fastapi.txt file with the latest version"
    command: |
      pip freeze -q -r hiq/requirements-fastapi.txt | sed '/freeze/,$ d' > dependencies-frozen-fastapi.txt
  - type: Command
    name: "Run Python cyclonedx_py module"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-python/blob/main/README.md
      cyclonedx-py requirements dependencies-frozen-fastapi.txt --of JSON -o artifactSBOM.json --sv 1.4
  - type: Command
    name: "deactivate the Environment"
    command: deactivate
  - type: Command
    name: "Create a Virtual Environment for requirements-gpu"
    command: |
      python3 -m venv gpu_env
  - type: Command
    name: "Activate the Environment"
    command: |
      source gpu_env/bin/activate
  - type: Command
    name: "Install cyclonedx_py module"
    command: |
      pip install cyclonedx-bom
  - type: Command
    name: "create a new requirements file that contains only the dependencies in the hiq/requirements-gpu.txt file with the latest version"
    command: |
      pip freeze -q -r hiq/requirements-gpu.txt | sed '/freeze/,$ d' > dependencies-frozen-gpu.txt
  - type: Command
    name: "Run Python cyclonedx_py module"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-python/blob/main/README.md
      cyclonedx-py requirements dependencies-frozen-gpu.txt --of JSON -o artifactSBOM.json --sv 1.4
  - type: Command
    name: "deactivate the Environment"
    command: deactivate
  - type: Command
    name: "Create a Virtual Environment for requirements-int"
    command: |
      python3 -m venv int_env
  - type: Command
    name: "Activate the Environment"
    command: |
      source int_env/bin/activate
  - type: Command
    name: "Install cyclonedx_py module"
    command: |
      pip install cyclonedx-bom
  - type: Command
    name: "create a new requirements file that contains only the dependencies in the hiq/requirements-lavis.txt file with the latest version"
    command: |
      pip freeze -q -r hiq/requirements-int.txt | sed '/freeze/,$ d' > dependencies-frozen-int.txt
  - type: Command
    name: "Run Python cyclonedx_py module"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-python/blob/main/README.md
      cyclonedx-py requirements dependencies-frozen-int.txt --of JSON -o artifactSBOM.json --sv 1.4
  - type: Command
    name: "deactivate the Environment"
    command: deactivate
  - type: Command
    name: "Create a Virtual Environment for requirements-lavis"
    command: |
      python3 -m venv lavis_env
  - type: Command
    name: "Activate the Environment"
    command: |
      source lavis_env/bin/activate
  - type: Command
    name: "Install cyclonedx_py module"
    command: |
      pip install cyclonedx-bom
  - type: Command
    name: "create a new requirements file that contains only the dependencies in the hiq/requirements-lavis.txt file with the latest version"
    command: |
      pip freeze -q -r hiq/requirements-lavis.txt | sed '/freeze/,$ d' > dependencies-frozen-lavis.txt
  - type: Command
    name: "Run Python cyclonedx_py module"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-python/blob/main/README.md
      cyclonedx-py requirements dependencies-frozen-lavis.txt --of JSON -o artifactSBOM.json --sv 1.4
  - type: Command
    name: "deactivate the Environment"
    command: deactivate
  - type: Command
    name: "Create a Virtual Environment for requirements-nodeps"
    command: |
      python3 -m venv nodeps_env
  - type: Command
    name: "Activate the Environment"
    command: |
      source nodeps_env/bin/activate
  - type: Command
    name: "Install cyclonedx_py module"
    command: |
      pip install cyclonedx-bom
  - type: Command
    name: "create a new requirements file that contains only the dependencies in the hiq/requirements-nodeps.txt file with the latest version"
    command: |
      pip freeze -q -r hiq/requirements-nodeps.txt | sed '/freeze/,$ d' > dependencies-frozen-nodeps.txt
  - type: Command
    name: "Run Python cyclonedx_py module"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-python/blob/main/README.md
      cyclonedx-py requirements dependencies-frozen-nodeps.txt --of JSON -o artifactSBOM.json --sv 1.4
  - type: Command
    name: "deactivate the Environment"
    command: deactivate
  - type: Command
    name: "Create a Virtual Environment for requirements-transformers"
    command: |
      python3 -m venv transformers_env
  - type: Command
    name: "Activate the Environment"
    command: |
      source transformers_env/bin/activate
  - type: Command
    name: "Install cyclonedx_py module"
    command: |
      pip install cyclonedx-bom
  - type: Command
    name: "create a new requirements file that contains only the dependencies in the hiq/requirements-transformers.txt file with the latest version"
    command: |
      pip freeze -q -r hiq/requirements-transformers.txt | sed '/freeze/,$ d' > dependencies-frozen-transformers.txt
  - type: Command
    name: "Run Python cyclonedx_py module"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-python/blob/main/README.md
      cyclonedx-py requirements dependencies-frozen-transformers.txt --of JSON -o artifactSBOM.json --sv 1.4
  - type: Command
    name: "deactivate the Environment"
    command: deactivate
  - type: Command
    name: "Create a Virtual Environment for requirements"
    command: |
      python3 -m venv requirements_env
  - type: Command
    name: "Activate the Environment"
    command: |
      source requirements_env/bin/activate
  - type: Command
    name: "Install cyclonedx_py module"
    command: |
      pip install cyclonedx-bom
  - type: Command
    name: "create a new requirements file that contains only the dependencies in the hiq/requirements.txt file with the latest version"
    command: |
      pip freeze -q -r hiq/requirements.txt | sed '/freeze/,$ d' > dependencies-frozen-requirements.txt
  - type: Command
    name: "Run Python cyclonedx_py module"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-python/blob/main/README.md
      cyclonedx-py requirements dependencies-frozen-requirements.txt --of JSON -o artifactSBOM.json --sv 1.4
  - type: Command
    name: "deactivate the Environment"
    command: deactivate
  - type: Command
    name: "Download CycloneDx-cli executable and install dependencies"
    command: |
      wget https://github.com/CycloneDX/cyclonedx-cli/releases/download/v0.24.2/cyclonedx-linux-x64
      yum install -y libicu
  - type: Command
    name: "Merge multiple SBOMs using CycloneDX-cli"
    command: |
      # For more details, visit https://github.com/CycloneDX/cyclonedx-cli/blob/main/README.md
      chmod +x cyclonedx-linux-x64
      ./cyclonedx-linux-x64 merge --input-files fastapi-bom.json gpu-bom.json int-bom.json lavis-bom.json nodeps-bom.json transformers-bom.json default-bom.json --output-file merged-bom.json
outputArtifacts:
  - name: artifactSBOM
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/merged-bom.json
